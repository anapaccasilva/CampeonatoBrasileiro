table Param_Estatistica
	lineageTag: ba276148-95a0-405a-bf26-03f37a1ad10e

	measure Card_Desempenho = ```
			
			VAR Total = [_jogos]
			VAR V = [_vitorias]
			VAR E = [_empates]
			VAR D = [_derrotas]
			
			VAR PctV = DIVIDE(V, Total, 0)
			VAR PctE = DIVIDE(E, Total, 0)
			VAR PctD = DIVIDE(D, Total, 0)
			
			VAR AnoSelecionado = SELECTEDVALUE(dCalendar[Ano-Campeonato], "Ano n√£o selecionado")
			
			RETURN
			"
			<div style='width: 408px; height: 288px; background-color: #1a1a1a; padding: 20px; border-radius: 12px; font-family: Arial, sans-serif; color: white; font-size: 14px; box-shadow: 0 2px 8px rgba(0,0,0,0.4); display: flex; flex-direction: column; justify-content: space-between; gap: 16px;'>
			
			    <div style='text-align: center; font-size: 18px; font-weight: bold; margin-bottom: 16px;'>
			        Brasileir√£o - " & AnoSelecionado & "
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px;'>üü¢ <strong>" & V & " Vit√≥rias</strong> ‚Äî " & FORMAT(PctV, "0.0%") & "</div>
			        <div style='height: 12px; background-color: #333; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: " & FORMAT(PctV * 100, "0") & "%; background-color: #2ecc71; transition: width 1s ease-in-out;'></div>
			        </div>
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px;'>üü° <strong>" & E & " Empates</strong> ‚Äî " & FORMAT(PctE, "0.0%") & "</div>
			        <div style='height: 12px; background-color: #333; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: " & FORMAT(PctE * 100, "0") & "%; background-color: #f1c40f; transition: width 1s ease-in-out;'></div>
			        </div>
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px;'>üî¥ <strong>" & D & " Derrotas</strong> ‚Äî " & FORMAT(PctD, "0.0%") & "</div>
			        <div style='height: 12px; background-color: #333; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: " & FORMAT(PctD * 100, "0") & "%; background-color: #e74c3c; transition: width 1s ease-in-out;'></div>
			        </div>
			    </div>
			
			</div>
			"
			
			```
		lineageTag: c491fe47-97ff-4d52-921a-79ca7c45ce07

	measure Card_Vazio = ```
			
			"<html>
			<head>
			    <meta charset=""UTF-8"">
			    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
			    <title>Card Vazio</title>
			    <style>
			        /* ===== VARI√ÅVEIS GLOBAIS ===== */
			        :root {
			            --cor-fundo: linear-gradient(45deg, #1a1a1a, #4a4a4a);
			            --cor-borda: rgba(255, 255, 255, 0.1);
			            --cor-sombra: rgba(0, 0, 0, 0.1);
			            --card-largura: 300px;
			            --card-altura: 150px;
			            --card-padding: 2rem;
			            --card-borda-raio: 20px;
			        }
			
			        /* ===== ESTILOS BASE ===== */
			        * {
			            margin: 0;
			            padding: 0;
			            box-sizing: border-box;
			        }
			
			        body {
			            min-height: 100vh;
			            display: flex;
			            justify-content: center;
			            align-items: center;
			            font-family: 'Segoe UI', sans-serif;
			        }
			
			        /* ===== COMPONENTE CARD ===== */
			        .kpi-card {
			            background: rgba(255, 255, 255, 0.1);
			            backdrop-filter: blur(10px);
			            border-radius: var(--card-borda-raio);
			            padding: var(--card-padding);
			            width: var(--card-largura);
			            height: var(--card-altura);
			            color: white;
			            position: relative;
			            overflow: hidden;
			            box-shadow: 0 8px 32px var(--cor-sombra);
			            border: 1px solid var(--cor-borda);
			        }
			    </style>
			</head>
			<body>
			    <div class=""kpi-card""></div>
			</body>
			</html>"
			
			```
		lineageTag: fceb08f1-c0b1-4f9d-9bc7-3783d693d911

	measure Card_vazio2 = ""
		lineageTag: 6a23b4f9-8c1d-4b1d-919e-a481b19d4270

	measure Card_Desempenho2 = ```
			
			var timefiltrado = ISBLANK(SELECTEDVALUE(dim_clubes[Clube])) = FALSE()
			VAR Total = [_jogos]
			VAR V = [_vitorias]
			VAR E = [_empates]
			VAR D = [_derrotas]
			
			VAR PctV = DIVIDE(V, Total, 0)
			VAR PctE = DIVIDE(E, Total, 0)
			VAR PctD = DIVIDE(D, Total, 0)
			
			VAR AnoSelecionado = SELECTEDVALUE(dCalendar[Ano-Campeonato], "Ano n√£o selecionado")
			
			VAR NumTimes = CALCULATE(DISTINCTCOUNT(dim_clubes[Clube]), REMOVEFILTERS(dim_clubes))
			VAR Campeao = CALCULATE(
			    SELECTEDVALUE(dim_clubes[Clube]),
			    FILTER(
			        ALL(fct_classificacao),
			        fct_classificacao[Ranking_Times] = 1
			            && fct_classificacao[Ano] = SELECTEDVALUE(dCalendar[Ano-Campeonato])
			    )
			)
			
			VAR JogosCampeao = 
			    CALCULATE(
			        DISTINCTCOUNT('full - unpivot'[ID]),
			        'full - unpivot'[time] = Campeao
			    )
			
			VAR Rodadas = JogosCampeao
			
			VAR _cores = IF(
			    NOT(ISBLANK(CALCULATE(
			        SELECTEDVALUE(dim_cores[C√≥digo Hexadecimal]), 
			        FILTER(
			            dim_cores, 
			            dim_cores[Cor] = SELECTEDVALUE(dim_clubes[Cores])
			        )
			    ))),
			    CALCULATE(
			        SELECTEDVALUE(dim_cores[C√≥digo Hexadecimal]), 
			        FILTER(
			            dim_cores, 
			            dim_cores[Cor] = SELECTEDVALUE(dim_clubes[Cores])
			        )
			    ),
			    "#2DCC70"  -- Tom de preto mais neutro/opaco
			)
			
			var _card =  "
			    <div style='width: 408px; height: 288px; background-color: " & _cores & "; padding: 20px; border-radius: 12px; font-family: Arial, sans-serif; color: white; font-size: 14px; box-shadow: 0 2px 8px rgba(0,0,0,0.4); display: flex; flex-direction: column; justify-content: space-between; gap: 16px;'>
			
			        <div style='text-align: center; font-size: 18px; font-weight: bold; margin-bottom: 16px;'>
			            Brasileir√£o S√©rie A - " & AnoSelecionado & "
			        </div>
			
			        <div>
			            <div style='margin-bottom: 4px;'><strong>" & V & " Vit√≥rias</strong> ‚Äî " & FORMAT(PctV, "0.0%") & "</div>
			            <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			                <div style='height: 100%; width: " & FORMAT(PctV * 100, "0") & "%; background-color: #ffffff; transition: width 1s ease-in-out;'></div>
			            </div>
			        </div>
			
			        <div>
			            <div style='margin-bottom: 4px;'><strong>" & E & " Empates</strong> ‚Äî " & FORMAT(PctE, "0.0%") & "</div>
			            <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			                <div style='height: 100%; width: " & FORMAT(PctE * 100, "0") & "%; background-color: #ffffff; transition: width 1s ease-in-out;'></div>
			            </div>
			        </div>
			
			        <div>
			            <div style='margin-bottom: 4px;'><strong>" & D & " Derrotas</strong> ‚Äî " & FORMAT(PctD, "0.0%") & "</div>
			            <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			                <div style='height: 100%; width: " & FORMAT(PctD * 100, "0") & "%; background-color: #ffffff; transition: width 1s ease-in-out;'></div>
			            </div>
			        </div>
			
			    </div>
			    "
			
			VAR _card2 = "
			<div style='width: 408px; height: 288px; background-color: #2DCC70; padding: 20px; border-radius: 12px; font-family: Arial, sans-serif; color: white; font-size: 14px; box-shadow: 0 2px 8px rgba(0,0,0,0.4); display: flex; flex-direction: column; justify-content: space-between; gap: 16px;'>
			
			    <div style='text-align: center; font-size: 18px; font-weight: bold; margin-bottom: 16px;'>
			        Brasileir√£o S√©rie A - " & AnoSelecionado & "
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px;'><strong>Participantes:</strong> " & NumTimes & " clubes</div>
			        <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: 100%; background-color: #ffffff33;'></div>
			        </div>
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px;'><strong>Rodadas:</strong> " & Rodadas & "</div>
			        <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: 100%; background-color: #ffffff33;'></div>
			        </div>
			    </div>
			
			    <div>
			        <div style='margin-bottom: 4px; font-size: 16px;'><strong>Campe√£o:</strong> " & Campeao & "</div>
			        <div style='height: 12px; background-color: #e0e0e0; border-radius: 6px; overflow: hidden;'>
			            <div style='height: 100%; width: 100%; background-color: #ffffff33;'></div>
			        </div>
			    </div>
			
			</div>
			"
			
			
			RETURN
			IF(
			    timefiltrado, 
			    _card,
			    _card2
			)
			   
			```
		lineageTag: 3201cabb-b9f6-4a4e-aeb7-2976cb777317

	measure Figurinha = ```
			
			VAR _Imagem = MIN(dim_jogadores[Imagem])
			VAR _Posicao = MIN(dim_jogadores[Posi√ß√£o]) 
			VAR _Nascimento = MIN(dim_jogadores[Dt Nascimento]) 
			VAR _Nacionalidade = MIN(dim_jogadores[Nacionalidade])  
			VAR _idade = DATEDIFF(min(dim_jogadores[Dt Nascimento]), TODAY(), YEAR)
			
			RETURN
			"<!DOCTYPE html>
			<html lang='en'>
			<head>
			    <meta charset='UTF-8'>
			    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
			    <title>Panini Style Card</title>
			    <style>
			        body {
			            margin: 0;
			            padding: 8px;
			            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			        }
			        .card {
			            width: 300px;
			            margin: 12px auto;
			            border: 1px solid #ccc;
			            background-color: #f9f9f9;
			            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			        }
			        .card-image-container {
			            position: relative;
			            height: 300px;
			            border: 6px solid #fff;
			            box-sizing: border-box;
			        }
			        .card-image {
			            width: 100%;
			            height: 100%;
			            object-fit: cover;
			        }
			        .card-content {
			            padding: 12px;
			            text-align: center;
			        }
			        .card-subtitle {
			            font-size: 13px;
			            font-weight: 500;
			            color: #555;
			            margin: 3px 0;
			        }
			        .birth-box {
			            display: inline-block;
			            background-color: #eee;
			            color: #666666;
			            padding: 5px 10px;
			            font-size: 13px;
			            font-weight: 600;
			            margin-top: 10px;
			        }
			        .idade {
			            font-style: italic;
			            font-size: 12px;
			            color: #777;
			            margin-top: 4px;
			        }
			    </style>
			</head>
			<body>
			    <div class='card'>
			        <div class='card-image-container'>
			            <img src='"&_Imagem&"' alt='"&_Posicao&"' class='card-image'>
			        </div>
			        <div class='card-content'>
			            <div class='card-subtitle'>"&_Nacionalidade&" - "&_Posicao&"</div>
			            <div class='birth-box'>"&_Nascimento&"</div>
			            <div class='idade'>"& _idade & " anos</div>
			        </div>
			    </div>
			</body>
			</html>"
			
			```
		lineageTag: 6b3ac8ee-3a7e-41b6-933a-b83a142d9b81

	measure _nome = SELECTEDVALUE(dim_jogadores[_apelido])
		lineageTag: bd2e50cc-db4e-46a5-a3a0-be134948c04c

	measure _status = SELECTEDVALUE(dim_jogadores[Situa√ß√£o])
		lineageTag: df1b3b54-777c-46d3-a013-3c370fa0baf3

	measure _pe = SELECTEDVALUE(dim_jogadores[P√©-Preferencial])
		lineageTag: d1a8ce4b-e5ad-4fb9-9536-dee9096d921c

	measure _nascimento = SELECTEDVALUE(dim_jogadores[Local Nascimento])
		lineageTag: 7def390a-afb0-4c7e-948a-d69222cc8c16

	measure _clubeatual = SELECTEDVALUE(dim_jogadores[Clube Atual])
		lineageTag: b2566479-e664-4706-81dc-c08aaf38aa1a

	measure 'Medida 2'
		lineageTag: 084b491e-91d5-4383-ad02-99907efccd86

	measure teste = ```
			DIVIDE(
			        [Passes_Mandante], 
			         CALCULATE(
			        SUM('campeonato-brasileiro-estatisticas-full'[passes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] <> "")
			        
			    )))
			```
		formatString: 0%;-0%;0%
		lineageTag: 2e8eca85-c2cc-4d6f-814a-c44a8bda5257

	measure _GolsSofridosJogador = ```
			
			CALCULATE(
			    sum('full - unpivot'[gols_contra]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[id] IN
			        (
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        )
			    ),
			    FILTER(
			        'campeonato-brasileiro-gols', 
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			    ),
			    FILTER(
			        'campeonato-brasileiro-cartoes', 
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			    )
			)
			
			```
		formatString: 0
		lineageTag: e1a87402-3fd7-461f-9f76-a6138b03e510

	measure '_GolsSofridosJogadorLabel %' =
			
			VAR golssofridos = [_GolsSofridosJogador]
			VAR proporcao = FORMAT(DIVIDE(golssofridos, golssofridos+[_GolsFeitos]), "0.00%")
			
			RETURN
			
			IF(NOT(ISBLANK(golssofridos)), " (" & proporcao & ")", "")
		lineageTag: 9f0c1b21-1e7f-4625-8252-340a703c7869

	measure _GolsSofridosJogadorLabel = COALESCE([_GolsSofridosJogador], "")
		lineageTag: 58b96636-c67e-4fda-b7ba-a3ab6a35d43d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _GolsFeitosJogadorLabel = COALESCE([_GolsFeitos], "")
		lineageTag: 3f05fb31-cbd9-4ca3-b581-51bdab1b85a0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '_GolsFeitosJogadorLabel %' =
			
			VAR golsfeitos = [_GolsFeitos]
			VAR proporcao = FORMAT(DIVIDE(golsfeitos, golsfeitos+[_GolsSofridosJogador]), "0.00%")
			
			RETURN
			
			IF(NOT(ISBLANK(golsfeitos)), " (" & proporcao & ")", "")
		lineageTag: faf5a507-a32c-493d-993a-866aa7feeab6

	measure _DesempenhoGolsFeitosPenalty = ```
			
			VAR JogosValidosDoAtleta =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			VAR GOLS = 
			CALCULATE(
			        DISTINCTCOUNT('campeonato-brasileiro-gols'[partida_id]),
			        'campeonato-brasileiro-gols'[tipo_de_gol] = "Penalty",
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(JogosValidosDoAtleta, 'campeonato-brasileiro-gols'[partida_id])
			    )
			
			RETURN
			COALESCE(GOLS, 0)
			```
		formatString: 0
		lineageTag: 0b8ad818-da7b-443f-807a-e878454edf9e

	measure _DesempenhoGolsFeitosNormal = ```
			
			VAR JogosValidosDoAtleta =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			VAR GOLS = 
			CALCULATE(
			        DISTINCTCOUNT('campeonato-brasileiro-gols'[partida_id]),
			        'campeonato-brasileiro-gols'[tipo_de_gol] = "",
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(JogosValidosDoAtleta, 'campeonato-brasileiro-gols'[partida_id])
			    )
			
			RETURN
			COALESCE(GOLS, 0)
			```
		formatString: 0
		lineageTag: d050ab75-ec8f-4e41-995d-dde87f8947fc

	measure Dummy = ```
			-1
			
			```
		formatString: 0
		lineageTag: 0f923228-98e6-4925-a031-62bf18f9d3b9

	measure _GolACadaXMinutos = ```
			
			
			VAR MinutosTotais = [_jogosAtleta] * 90
			VAR MinutosPorGol = DIVIDE([_DesempenhoGolsFeitosNormal]+[_DesempenhoGolsFeitosPenalty], MinutosTotais, 0) 
			
			RETURN
			MinutosPorGol
			```
		formatString: 0.000
		lineageTag: f1ae06cf-12d1-471b-9bbc-402e373d01c2

	measure _MediaGolsPorJogo =
			
			COALESCE(
			    DIVIDE(
			        [_DesempenhoGolsFeitos],
			        [_jogosAtleta]
			    ),
			    0
			)
		lineageTag: b36e7077-4e2c-47b5-b85a-f87747cd29d8

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _ParticipacaoPorPartida = ```
			
			VAR GolsFeitosJogadorPorPartida =
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-gols'),
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			        'campeonato-brasileiro-gols'[tipo_de_gol] = BLANK(),
			        ALLEXCEPT('campeonato-brasileiro-gols', 'campeonato-brasileiro-gols'[partida_id])
			    )
			
			VAR GolsFeitosTimePorPartida =
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-gols'),
			        'campeonato-brasileiro-gols'[clube] = MAX('campeonato-brasileiro-gols'[clube]),
			        'campeonato-brasileiro-gols'[tipo_de_gol] = BLANK(),
			        ALLEXCEPT('campeonato-brasileiro-gols', 'campeonato-brasileiro-gols'[partida_id])
			    )
			
			VAR ParticipacaoPorPartida =
			    IF(
			        GolsFeitosTimePorPartida > 0,
			        DIVIDE(GolsFeitosJogadorPorPartida, GolsFeitosTimePorPartida, 0),
			        0
			    )
			
			VAR MediaParticipacao =
			    AVERAGEX(
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        ParticipacaoPorPartida
			    )
			
			RETURN
			IF(
			    GolsFeitosTimePorPartida > 0,
			    FORMAT(MediaParticipacao, "0.00%"),
			    "0%"
			)
			
			```
		lineageTag: d72ceda7-703d-4879-9f31-c73f4f66c0a9

	measure _GolssofridosComJogador = ```
			
			
			VAR PartidasJogadas =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			VAR GolsSofridos = 
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-gols'),
			        'campeonato-brasileiro-gols'[tipo_de_gol] <> "Gol Contra",
			        'campeonato-brasileiro-gols'[clube] <> MAX('campeonato-brasileiro-gols'[clube]),
			        'campeonato-brasileiro-gols'[partida_id] IN PartidasJogadas
			    )
			
			return COALESCE(GolsSofridos,0)
			
			```
		formatString: 0
		lineageTag: 833281a1-d4e2-45b4-b990-5e2f896903a6

	measure _MediaGolsSofridosPorJogo =
			
			COALESCE(
			    DIVIDE(
			        [_GolssofridosComJogador],
			        [_jogosAtleta]
			    ),
			    0
			)
		lineageTag: 56c19c63-0857-4793-b6a7-2338999c435a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _TotalCartoesAmarelos = ```
			
			VAR JogosValidosDoAtleta =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			RETURN
			COALESCE(
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-cartoes'),
			        'campeonato-brasileiro-cartoes'[cartao] = "Amarelo",
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(JogosValidosDoAtleta, 'campeonato-brasileiro-cartoes'[partida_id])
			    ),
			    0
			)
			
			```
		formatString: 0
		lineageTag: e6a0ff28-ef20-46c6-9067-e8cae752f405

	measure _TotalCartoesVermelhos = ```
			
			VAR JogosValidosDoAtleta =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			RETURN
			COALESCE(
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-cartoes'),
			        'campeonato-brasileiro-cartoes'[cartao] = "Vermelho",
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(JogosValidosDoAtleta, 'campeonato-brasileiro-cartoes'[partida_id])
			    ),
			    0
			)
			
			```
		formatString: 0
		lineageTag: 725cb1df-0772-4f96-8f9c-087210bbcbfa

	measure _CartoesPorJogo =
			
			VAR TotalCartoes =
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-cartoes'),
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			    )
			RETURN
			COALESCE(
			    DIVIDE(TotalCartoes, [_jogosAtleta]),
			    0
			)
		lineageTag: b7c97b4b-b865-4e18-be39-d5dcac15d06c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _CartoesPorMinuto =
			
			VAR TotalCartoes =
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-cartoes'),
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			    )
			VAR MinutosJogador =
			    CALCULATE(
			        SUM('campeonato-brasileiro-gols'[minuto]),  -- Aqui estamos somando a minutagem dos gols do jogador
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			    )
			RETURN
			COALESCE(
			    DIVIDE(TotalCartoes, MinutosJogador),
			    0
			)
		lineageTag: 841a0bac-0bb3-499d-bb39-33df6918da77

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure '% Jogos Com Gol' =
			
			VAR JogosValidosDoAtleta =
			    CALCULATETABLE(
			        VALUES('full - unpivot'[id]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[id] IN
			            SELECTCOLUMNS(
			                UNION(
			                    SELECTCOLUMNS('campeonato-brasileiro-gols', "partida_id", 'campeonato-brasileiro-gols'[partida_id]),
			                    SELECTCOLUMNS('campeonato-brasileiro-cartoes', "partida_id", 'campeonato-brasileiro-cartoes'[partida_id])
			                ),
			                "partida_id", [partida_id]
			            )
			        ),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta])
			        ),
			        FILTER(
			            'campeonato-brasileiro-cartoes',
			            'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			        )
			    )
			
			VAR JogosComGol =
			    CALCULATE(
			        DISTINCTCOUNT('campeonato-brasileiro-gols'[partida_id]),
			        'campeonato-brasileiro-gols'[tipo_de_gol] <> "Gol Contra",
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(JogosValidosDoAtleta, 'campeonato-brasileiro-gols'[partida_id])
			    )
			
			VAR TotalJogos =
			    COUNTROWS(JogosValidosDoAtleta)
			
			RETURN
			COALESCE(DIVIDE(JogosComGol, TotalJogos, 0),0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 4376544a-9494-44a8-b5d8-6e8b44d91f05

	measure '% Jogos Com Cart√£o' = ```
			
			VAR JogosComCartao =
			    CALCULATE(
			        DISTINCTCOUNT('campeonato-brasileiro-cartoes'[partida_id]),
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta]),
			        TREATAS(
			            VALUES('full - unpivot'[id]),
			            'campeonato-brasileiro-cartoes'[partida_id]
			        )  -- Garantir que estamos considerando apenas os jogos que est√£o na unpivot
			    )
			
			VAR JogosAtletaComParticipacao =
			    CALCULATE(
			        DISTINCTCOUNT('full - unpivot'[id]),
			        'full - unpivot'[id] IN VALUES('campeonato-brasileiro-cartoes'[partida_id]) || 
			        'full - unpivot'[id] IN VALUES('campeonato-brasileiro-gols'[partida_id]),
			        'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			        'campeonato-brasileiro-cartoes'[atleta] = MAX(dim_jogadores[atleta])
			    )
			
			RETURN
			COALESCE(
			    DIVIDE(JogosComCartao, JogosAtletaComParticipacao, 0),
			    0
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 91744f15-6147-4207-a58d-b31d876f390f

	measure _GolsClutch =
			
			CALCULATE(
			    COUNTROWS('campeonato-brasileiro-gols'),
			    'campeonato-brasileiro-gols'[atleta] = MAX(dim_jogadores[atleta]),
			    'campeonato-brasileiro-gols'[minuto] >= 75,
			    TREATAS(
			        VALUES('full - unpivot'[id]),
			        'campeonato-brasileiro-gols'[partida_id]
			    )
			)
		formatString: 0
		lineageTag: 7898c992-745f-4b6e-9ef4-93b6e0d7b906

	measure _GolsSofridosACadaXMinutos =
			
			VAR TotalGolsSofridos =
			    CALCULATE(
			        COUNTROWS('campeonato-brasileiro-gols'),
			        FILTER(
			            'campeonato-brasileiro-gols',
			            'campeonato-brasileiro-gols'[clube] <> MAX('campeonato-brasileiro-gols'[clube]) &&
			            'campeonato-brasileiro-gols'[tipo_de_gol] <> "Gol Contra"  -- Gols sofridos (n√£o gol contra)
			        )
			    )
			
			VAR MinutosTotais = [_jogosAtleta] * 90  -- Total de minutos jogados
			VAR MinutosPorGolSofrido = DIVIDE(TotalGolsSofridos, MinutosTotais, 0)  -- Calculando gols sofridos por minuto
			
			RETURN
			MinutosPorGolSofrido
		formatString: 0.000
		lineageTag: fc75c999-cd41-4343-bf5b-3f01bb3bc367

	measure SVG = ```
			
			VAR Percentage = [% Jogos Com Cart√£o]
			VAR ProgressWidth = ROUND(300 * Percentage / 100, 0)
			VAR ArrowCondition = [_jogosAtleta]
			VAR SVG =
			    "data:image/svg+xml;utf8, <svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 600 70""> //
			        <g>
			            <!-- Background bar (100% gray bar) -->
			            <rect x=""50"" y=""20"" width=""300"" height=""20"" rx=""10"" ry=""10"" fill=""#E0E0E0"" />
			            
			            <!-- Progress bar with dynamic width based on Percentage -->
			            <rect x=""50"" y=""20"" width=""" & FORMAT(ProgressWidth, "0") & """ height=""20"" rx=""10"" ry=""10"" fill=""#7161CE"" />
			            
			            <!-- Percentage label centered relative to the trend indicator -->
			            <text x=""420"" y=""35"" font-family=""Segoe UI"" font-size=""25"" fill=""#333333"" text-anchor=""middle"">" & FORMAT(Percentage, "0") & "%</text>
			            
			            <!-- Vertical separator line next to the percentage label -->
			            <line x1=""470"" y1=""5"" x2=""470"" y2=""50"" stroke=""#CCCCCC"" stroke-width=""2"" />
			            
			            " & 
			            IF(ArrowCondition > 0, // Condition to determine which trend indicator to show
			                "<g transform=""translate(530, 27)""> <!-- Centered position -->
			                    <!-- Trend indicator (green circle) -->
			                    <circle cx=""0"" cy=""0"" r=""16"" fill=""#5DD7AA"" />
			                    <!-- Custom upward arrow -->
			                    <polyline points=""-8,6 0,-8 8,6 0,1 -8,6"" fill=""white"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"" />
			                </g>",
			                "<g transform=""translate(530, 27)""> <!-- Centered position -->
			                    <!-- Trend indicator (red circle) -->
			                    <circle cx=""0"" cy=""0"" r=""16"" fill=""#D75DA7"" />
			                    <!-- Custom downward arrow -->
			                    <polyline points=""-8,-6 0,8 8,-6 0,-1 -8,-6"" fill=""white"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round"" />
			                </g>"
			            ) & "
			        </g>
			    </svg>"
			
			RETURN SVG 
			```
		lineageTag: 54e2902b-abaf-4b5d-a69a-3bb679c0cb45

	measure _Score_Ataque = ```
			
			VAR MaxGolsNormais = 20
			VAR MaxGolsPenalti = 5
			VAR MaxGolsPorJogo = 1.2
			VAR MaxGolsPorMinuto = 0.02
			
			VAR GolsNormais = [_DesempenhoGolsFeitosNormal]
			VAR GolsPenalti = [_DesempenhoGolsFeitosPenalty]
			VAR GolsPorJogo = [_MediaGolsPorJogo]
			VAR GolsPorMinuto = [_GolACadaXMinutos]
			
			VAR NormalGolsNormais = MIN(GolsNormais / MaxGolsNormais, 1)
			VAR NormalGolsPenalti = MIN(GolsPenalti / MaxGolsPenalti, 1)
			VAR NormalGolsPorJogo = MIN(GolsPorJogo / MaxGolsPorJogo, 1)
			VAR NormalGolsPorMinuto = MIN(GolsPorMinuto / MaxGolsPorMinuto, 1)
			
			-- Verifica se o jogador tem jogos v√°lidos
			VAR JogosAtleta = [_jogosAtleta]
			
			RETURN 
			IF(
			    JogosAtleta > 0,
			    ROUND(
			        100 * (
			            NormalGolsNormais * 0.4 +
			            NormalGolsPenalti * 0.15 +
			            NormalGolsPorJogo * 0.25 +
			            NormalGolsPorMinuto * 0.2
			        ),
			        1
			    ),
			    0
			)
			
			```
		lineageTag: a7a867ed-27cc-4e9d-b4df-1a8a373e38bd

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _Score_DefesaBalanceado = ```
			
			-- M√ÅXIMOS TE√ìRICOS (ajust√°veis)
			VAR MaxGolsSofridos = 20
			VAR MaxGolsSofridosPorJogo = 1.5
			VAR MaxGolsSofridosPorMinuto = 0.025
			
			VAR MaxGolsFeitos = 15
			VAR MaxGolsPorJogo = 1.2
			
			-- VALORES DAS MEDIDAS
			VAR GolsSofridos = [_GolsSofridosComJogador]
			VAR GolsPorJogoDef = [_MediaGolsSofridosPorJogo]
			VAR GolsPorMinutoDef = [_GolsSofridosACadaXMinutos]
			
			VAR GolsFeitos = [_DesempenhoGolsFeitosNormal] + [_DesempenhoGolsFeitosPenalty]
			VAR GolsPorJogoOf = [_GolACadaXMinutos]
			
			-- NORMALIZA√á√ÉO (defesa quanto menos, melhor; ataque quanto mais, melhor)
			VAR NormSofridos = 1 - MIN(GolsSofridos / MaxGolsSofridos, 1)
			VAR NormSofridosJogo = 1 - MIN(GolsPorJogoDef / MaxGolsSofridosPorJogo, 1)
			VAR NormSofridosMinuto = 1 - MIN(GolsPorMinutoDef / MaxGolsSofridosPorMinuto, 1)
			
			VAR NormFeitos = MIN(GolsFeitos / MaxGolsFeitos, 1)
			VAR NormFeitosJogo = MIN(GolsPorJogoOf / MaxGolsPorJogo, 1)
			
			-- Verifica se o jogador tem jogos v√°lidos
			VAR JogosAtleta = [_jogosAtleta]
			
			-- C√ÅLCULO FINAL
			RETURN 
			IF(
			    JogosAtleta > 0,
			    ROUND(
			        100 * (
			            NormSofridos * 0.35 +
			            NormSofridosJogo * 0.30 +
			            NormSofridosMinuto * 0.20 +
			            NormFeitos * 0.10 +
			            NormFeitosJogo * 0.05
			        ),
			        1
			    ),
			    0
			)
			```
		lineageTag: 2a27d2f8-335c-42d2-a402-698c6a196a68

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _Score_Disciplina = ```
			
			-- M√ÅXIMOS TE√ìRICOS (ajust√°veis conforme os dados)
			VAR MaxVermelhos = 5
			VAR MaxAmarelos = 10
			VAR MaxCartoesPorJogo = 1
			VAR MaxCartoesPorMinuto = 0.02  -- 1 cart√£o a cada 50 minutos
			
			-- MEDIDAS
			VAR Vermelhos = [_TotalCartoesVermelhos]
			VAR Amarelos = [_TotalCartoesAmarelos]
			VAR PorJogo = [_CartoesPorJogo]
			VAR PorMinuto = [_CartoesPorMinuto]
			
			-- NORMALIZA√á√ÉO (quanto MENOR, melhor)
			VAR NormVermelho = 1 - MIN(Vermelhos / MaxVermelhos, 1)
			VAR NormAmarelo = 1 - MIN(Amarelos / MaxAmarelos, 1)
			VAR NormPorJogo = 1 - MIN(PorJogo / MaxCartoesPorJogo, 1)
			VAR NormPorMinuto = 1 - MIN(PorMinuto / MaxCartoesPorMinuto, 1)
			
			-- Verifica se o jogador tem jogos v√°lidos
			VAR JogosAtleta = [_jogosAtleta]
			
			-- SCORE FINAL
			RETURN
			IF(
			    JogosAtleta > 0,
			    ROUND(
			        100 * (
			            NormVermelho * 0.40 +
			            NormAmarelo * 0.25 +
			            NormPorJogo * 0.20 +
			            NormPorMinuto * 0.15
			        ),
			        1
			    ),
			    0
			)
			
			```
		lineageTag: fdd68ae5-8af6-4ab3-bd13-902996842003

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _ScoreInfluenciaBalanceado = ```
			
			VAR PorcentagemComGol = DIVIDE([% Jogos Com Gol], 100)
			VAR PorcentagemComCartao = DIVIDE([% Jogos Com Cart√£o], 100)
			VAR ClutchGols = [_GolsClutch]
			VAR GolsNormais = [_DesempenhoGolsFeitosNormal]
			
			-- Normaliza√ß√£o dos gols clutch e normais (assumindo m√°ximo de 5 cada para normalizar entre 0 e 1)
			VAR ClutchScore = MIN(DIVIDE(ClutchGols, 5), 1)
			VAR GolsScore = MIN(DIVIDE(GolsNormais, 10), 1)
			
			-- C√°lculo ponderado
			VAR InfluenciaFinal =
			    (PorcentagemComGol * 0.4) +
			    (ClutchScore * 0.25) +
			    ((1 - PorcentagemComCartao) * 0.15) +
			    (GolsScore * 0.2)
			
			-- Verifica se o jogador tem jogos v√°lidos
			VAR JogosAtleta = [_jogosAtleta]
			
			RETURN 
			IF(
			    JogosAtleta > 0,
			    ROUND(InfluenciaFinal * 100, 1),
			    0
			)
			
			```
		lineageTag: 4a9e8702-21b9-4532-bb3a-7490214e357d

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure score_deltaAtaque = 100-[_Score_Ataque]
		formatString: 0
		lineageTag: b9ac0d51-0b6d-4912-849b-ce92a9bc41fb

	measure score_deltaDefesa = 100-[_Score_DefesaBalanceado]
		lineageTag: 7c2c929f-fda1-45ba-87a0-2cb797d75da2

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure score_deltaDisciplina = 100-[_Score_Disciplina]
		lineageTag: f84e2eb4-a9aa-4145-ab6e-295c879d24da

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure score_deltaInfluencia = 100-[_ScoreInfluenciaBalanceado]
		lineageTag: f20f5546-c92a-4afe-936e-cadd53ead490

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure _Glossario_ScoreAtaque =
			
			"üéØ Score de Ataque" & UNICHAR(10) &
			"= (Gols Normais / 20) * 40%" & UNICHAR(10) &
			"+ (Gols de P√™nalti / 5) * 15%" & UNICHAR(10) &
			"+ (Gols por Jogo / 1,2) * 25%" & UNICHAR(10) &
			"+ (Gols por Minuto / 0,02) * 20%"
		lineageTag: 10390cb5-1987-4302-95e4-a79ec5e79e08

	measure _URL_Clube_Visitante = ```
			
			CALCULATE(
			    MAX(dim_clubes[url]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "N"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[partida_id]),
			        'full - unpivot'[id]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
			
			```
		lineageTag: dfacc88d-08dd-4d23-97b6-8a40bad18adc
		dataCategory: ImageUrl

	measure Figurinha_ClubeVisitante = ```
			
			VAR _UrlClube = [_URL_Clube_Visitante]
			VAR _NomeClube = CALCULATE(
			    MAX(dim_clubes[clube]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "N"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			        'full - unpivot'[id_time]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
			
			RETURN
			"<!DOCTYPE html>
			<html lang='en'>
			<head>
			    <meta charset='UTF-8'>
			    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
			    <title>Clube Visitante</title>
			    <style>
			        body {
			            margin: 0;
			            padding: 8px;
			            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			        }
			        .card {
			            width: 250px;
			            margin: 12px auto;
			            border: 1px solid #ccc;
			            background-color: #f9f9f9;
			            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			        }
			        .card-image-container {
			            position: relative;
			            height: 250px;
			            border: 6px solid #fff;
			            box-sizing: border-box;
			            background-color: #fff;
			        }
			        .card-image {
			            width: 100%;
			            height: 100%;
			            object-fit: contain;
			            padding: 12px;
			        }
			        .card-content {
			            padding: 12px;
			            text-align: center;
			        }
			        .card-title {
			            font-size: 15.5px;
			            font-weight: 600;
			            color: #333;
			            margin: 5px 0;
			        }
			    </style>
			</head>
			<body>
			    <div class='card'>
			        <div class='card-image-container'>
			            <img src='"&_UrlClube&"' alt='"&_NomeClube&"' class='card-image'>
			        </div>
			        <div class='card-content'>
			            <div class='card-title'>"&_NomeClube&"</div>
			        </div>
			    </div>
			</body>
			</html>"
			
			```
		lineageTag: fb7d90a7-6fcf-4f74-a8af-18904ea10f7e

	measure _URL_Clube_Mandante = ```
			
			CALCULATE(
			    MAX(dim_clubes[url]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "S"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[partida_id]),
			        'full - unpivot'[id]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
			
			```
		lineageTag: 6de4cfa6-65b7-4dae-afc3-35b384b16890

	measure Figurinha_ClubeMandante = ```
			
			VAR _UrlClube = [_URL_Clube_Mandante]
			VAR _NomeClube = CALCULATE(
			    MAX(dim_clubes[clube]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "S"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			        'full - unpivot'[id_time]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
			
			RETURN
			"<!DOCTYPE html>
			<html lang='en'>
			<head>
			    <meta charset='UTF-8'>
			    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
			    <title>Clube Visitante</title>
			    <style>
			        body {
			            margin: 0;
			            padding: 8px;
			            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			        }
			        .card {
			            width: 250px;
			            margin: 12px auto;
			            border: 1px solid #ccc;
			            background-color: #f9f9f9;
			            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
			        }
			        .card-image-container {
			            position: relative;
			            height: 250px;
			            border: 6px solid #fff;
			            box-sizing: border-box;
			            background-color: #fff;
			        }
			        .card-image {
			            width: 100%;
			            height: 100%;
			            object-fit: contain;
			            padding: 12px;
			        }
			        .card-content {
			            padding: 12px;
			            text-align: center;
			        }
			        .card-title {
			            font-size: 15.5px;
			            font-weight: 600;
			            color: #333;
			            margin: 5px 0;
			        }
			    </style>
			</head>
			<body>
			    <div class='card'>
			        <div class='card-image-container'>
			            <img src='"&_UrlClube&"' alt='"&_NomeClube&"' class='card-image'>
			        </div>
			        <div class='card-content'>
			            <div class='card-title'>"&_NomeClube&"</div>
			        </div>
			    </div>
			</body>
			</html>"
			
			```
		lineageTag: a799b493-a8db-489f-ac6a-b103fd4304cb

	measure TESTE_STAT = ```
			
			
			VAR _MandantePosse = 30
			VAR _VisitantePosse = 70
			
			RETURN
			"<div style='width: 100%; background-color: #f0f0f0; border-radius: 6px; overflow: hidden; height: 20px; display: flex; font-size: 12px; font-family: sans-serif;'>" &
			
			    "<div style='width:" & _MandantePosse & "%; background-color: #007ACC; color: white; text-align: center; line-height: 20px;'>" &
			        _MandantePosse & "%" &
			    "</div>" &
			
			    "<div style='width:" & _VisitantePosse & "%; background-color: #FF6600; color: white; text-align: center; line-height: 20px;'>" &
			        _VisitantePosse & "%" &
			    "</div>" &
			
			"</div>"
			
			```
		lineageTag: 06ec64fb-5d6a-42f7-a525-85c4af60f675

	measure Chutes_Mandante = ```
			
			VAR _chutes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[chutes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "s")
			        
			    )
			)
			
			RETURN
			COALESCE(_chutes, 0)
			```
		formatString: 0
		lineageTag: d372a25d-ce36-4e7e-a8b4-f90cd234cc2d

	measure Chutes_Visitante = ```
			
			VAR _chutes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[chutes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_chutes, 0)
			```
		formatString: 0
		lineageTag: 2ff4b78d-3920-4acb-af24-18c06ad4b628

	measure Finalizacoes_Visitante = ```
			
			VAR _chutes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[chutes_no_alvo]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_chutes, 0)
			```
		formatString: 0
		lineageTag: e750624c-f735-4f2e-bc7a-e5c68507965b

	measure Finalizacoes_Mandante = ```
			
			VAR _chutes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[chutes_no_alvo]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_chutes, 0)
			```
		formatString: 0
		lineageTag: 15e07458-23d5-41a0-a7a6-b519a44475cf

	measure Posse_Visitante = ```
			
			VAR _posse = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[posse_de_bola]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(FORMAT(_posse, "0%"), "-")
			```
		lineageTag: 89815c21-9cec-4761-a183-ba125741329e

	measure Posse_Mandante = ```
			
			VAR _posse = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[posse_de_bola]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(FORMAT(_posse, "0%"), "-")
			```
		lineageTag: f756df44-f123-4445-b275-48571aaec8ad

	measure Passes_Mandante = ```
			
			VAR _passes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[passes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_passes, "-")
			```
		formatString: 0
		lineageTag: 6bcb4db6-3bc0-4cc3-8017-f7e674bcb18b

	measure Passes_Visitante = ```
			
			VAR _passes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[passes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_passes, "-")
			```
		formatString: 0
		lineageTag: dfc0374d-3de5-481a-9a9f-ed791c585e95

	measure Precisao_Mandante = ```
			
			VAR _precisao = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[precisao_passes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(FORMAT(_precisao, "0%"), "-")
			```
		lineageTag: 685c4b97-59e3-4034-94dd-5dbbeb3815c0

	measure Precisao_Visitante = ```
			
			VAR _precisao = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[precisao_passes]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(FORMAT(_precisao, "0%"), "-")
			```
		lineageTag: eefaa647-6957-4258-80b9-87c79ef6cd5f

	measure 'Medida 3'
		lineageTag: 6e014013-03f3-47b4-9772-a332b65e0413

	measure Faltas_Visitante = ```
			
			VAR _faltas = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[faltas]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_faltas, "-")
			```
		formatString: 0
		lineageTag: 171147c7-7ec4-4a8e-90b4-0ea9efa68774

	measure Faltas_Mandante = ```
			
			VAR _faltas = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[faltas]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_faltas, "-")
			```
		formatString: 0
		lineageTag: 8d7464b8-3e81-4d64-ba92-38a41979bd6f

	measure CartoesVermelho_Mandante = ```
			
			VAR _cartoes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[cartao_vermelho]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_cartoes, "-")
			```
		formatString: 0
		lineageTag: fbcd940e-2c5d-4e53-9e0c-0c69ddb2e3f5

	measure CartoesVermelho_Visitante = ```
			
			VAR _cartoes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[cartao_vermelho]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_cartoes, "-")
			```
		formatString: 0
		lineageTag: 272feaf4-7a23-45f0-977f-7b23fe0687da

	measure CartoesAmarelo_Mandante = ```
			
			VAR _cartoes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[cartao_amarelo]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_cartoes, "-")
			```
		formatString: 0
		lineageTag: cfc9e905-9218-4b3f-a155-6d64ce76a52c

	measure CartoesAmarelo_Visitante = ```
			
			VAR _cartoes = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[cartao_amarelo]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_cartoes, "-")
			```
		formatString: 0
		lineageTag: c96a4c52-2632-4b80-80fe-c73359bcd3e9

	measure Impedimentos_Mandante = ```
			
			VAR _impedimentos = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[impedimentos]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_impedimentos, "-")
			```
		formatString: 0
		lineageTag: 5f95d6a1-008c-40e3-b8c4-792df7f77902

	measure Impedimentos_Visitante = ```
			
			VAR _impedimentos = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[impedimentos]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_impedimentos, "-")
			```
		formatString: 0
		lineageTag: 08b6e05d-660a-42b2-9b7e-94c7c0791f18

	measure Escanteios_Mandante = ```
			
			VAR _escanteios = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[escanteios]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "S")
			        
			    )
			)
			
			RETURN
			COALESCE(_escanteios, "-")
			```
		formatString: 0
		lineageTag: b6824c67-a31f-44d0-ab99-4d9e5b72ba2e

	measure Escanteios_Visitante = ```
			
			VAR _escanteios = 
			    CALCULATE(
			        MAX('campeonato-brasileiro-estatisticas-full'[escanteios]),
			        FILTER('full - unpivot','full - unpivot'[id_time] =  CALCULATE(MIN('campeonato-brasileiro-estatisticas-full'[id_time]), 'full - unpivot'[mandante_flag] = "N")
			        
			    )
			)
			
			RETURN
			COALESCE(_escanteios, "-")
			```
		formatString: 0
		lineageTag: 953f0129-d562-41a5-a948-4e12ba6648b3

	measure ValorRadar = ```
			
			VAR atributoSelecionado = SELECTEDVALUE(RadarChart_Mandante[atributo])
			RETURN
			    SWITCH(
			        atributoSelecionado,
			        "Posse de bola", [Posse_Mandante],
			        "Precis√£o", [Precisao_Mandante]
			    )
			
			```
		lineageTag: 59cdc208-db02-4f02-9989-9dd6d4a545f5

	measure Formacao_Mandante_HTML = ```
			
			VAR _Formacao = 
			    CALCULATE(
			        MAX(dim_formacao[formacao]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "S"
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			            'full - unpivot'[id_time]
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			            'full - unpivot'[rodata]
			        ),
			        USERELATIONSHIP(
			            'full - unpivot'[id_time],
			            'campeonato-brasileiro-estatisticas-full'[id_time]
			        )
			    )
			
			VAR _UrlFormacao = 
			    CALCULATE(
			        MAX(dim_formacao[url]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "S"
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			            'full - unpivot'[id_time]
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			            'full - unpivot'[rodata]
			        ),
			        USERELATIONSHIP(
			            'full - unpivot'[id_time],
			            'campeonato-brasileiro-estatisticas-full'[id_time]
			        )
			    )
			
			VAR _tecnico = 
			    CALCULATE(
			        MAX('full - unpivot'[tecnico]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "S"
			        )
			    )
			
			RETURN
			"<div style='
			    background-color: white; 
			    border-radius: 8px; 
			    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); 
			    padding: 8px 12px; 
			    width: fit-content; 
			    margin: auto; 
			    text-align: center;
			    font-family: Segoe, sans-serif;
			    transform: scale(2.1);
			    transform-origin: top center;
			'>
			    <img src='" & _UrlFormacao & "' 
			         alt='" & _Formacao & "' 
			         style='
			            width: 100%; 
			            max-width: 160px; 
			            margin-bottom: 8px; 
			            border-radius: 4px;
			        ' />
			    <h2 style='
			        font-size: 10px; 
			        font-family: Tahoma, sans-serif;
			        margin: 0;
			    '>" & _Formacao & "</h2>
			    <p style='
			        font-size: 8px; 
			        font-family: Tahoma, sans-serif;
			        color: #444; 
			        margin-top: 4px;
			        margin-bottom: 0;
			    '>T√©cnico: " & _tecnico & "</p>
			</div>"
			
			```
		lineageTag: bdacc314-bb20-47ce-af8f-9dafd2f2e601

	measure Formacao_Visitante_HTML = ```
			
			VAR _Formacao = 
			    CALCULATE(
			        MAX(dim_formacao[formacao]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "N"
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			            'full - unpivot'[id_time]
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			            'full - unpivot'[rodata]
			        ),
			        USERELATIONSHIP(
			            'full - unpivot'[id_time],
			            'campeonato-brasileiro-estatisticas-full'[id_time]
			        )
			    )
			
			VAR _UrlFormacao = 
			    CALCULATE(
			        MAX(dim_formacao[url]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "N"
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			            'full - unpivot'[id_time]
			        ),
			        TREATAS(
			            VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			            'full - unpivot'[rodata]
			        ),
			        USERELATIONSHIP(
			            'full - unpivot'[id_time],
			            'campeonato-brasileiro-estatisticas-full'[id_time]
			        )
			    )
			
			VAR _tecnico = 
			    CALCULATE(
			        MAX('full - unpivot'[tecnico]),
			        FILTER(
			            'full - unpivot',
			            'full - unpivot'[mandante_flag] = "N"
			        )
			    )
			
			RETURN
			"<div style='
			    background-color: white; 
			    border-radius: 8px; 
			    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); 
			    padding: 8px 12px; 
			    width: fit-content; 
			    margin: auto; 
			    text-align: center;
			    font-family: Segoe, sans-serif;
			    transform: scale(2.1);
			    transform-origin: top center;
			'>
			    <img src='" & _UrlFormacao & "' 
			         alt='" & _Formacao & "' 
			         style='
			            width: 100%; 
			            max-width: 160px; 
			            margin-bottom: 8px; 
			            border-radius: 4px;
			        ' />
			    <h2 style='
			        font-size: 10px; 
			        font-family: Tahoma, sans-serif;
			        margin: 0;
			    '>" & _Formacao & "</h2>
			    <p style='
			        font-size: 8px; 
			        font-family: Tahoma, sans-serif;
			        color: #444; 
			        margin-top: 4px;
			        margin-bottom: 0;
			    '>T√©cnico: " & _tecnico & "</p>
			</div>"
			
			```
		lineageTag: 752a28fa-6f86-4f1e-a437-af5724de0115

	measure 'Medida 4'
		lineageTag: e774271e-5bab-484c-8301-7323206e66e2

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure 'Medida 5'
		lineageTag: a22d279a-c729-4bb1-9690-0d734bbaefdc

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure 'Medida 6'
		lineageTag: 76b3dd1e-b053-4d93-90fb-48c6984f3878

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure fc_classificacao = IF(SELECTEDVALUE(Param_Estatistica[Par√¢metro Pedido])<=1, 2006, BLANK())
		formatString: 0
		lineageTag: dd56d5e9-3084-4131-b430-0e3ac0cfa419

	measure 'Medida 7'
		lineageTag: b6ff6007-45a8-4c06-b6f3-263ff9d3baaa

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure rebaixamento = IF(SELECTEDVALUE(Param_Estatistica[Par√¢metro Pedido])=1, 17, blank())
		formatString: 0
		lineageTag: d2be7ecf-c37b-46e9-b81b-7e51c127a0cf

	measure 'Medida 8'
		lineageTag: 71b5d377-98b1-4c65-8c1e-ed20e1c33fca

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure label_emoji = ```
			
			CALCULATE(
			    SELECTEDVALUE(dEventos[Emoji]),
			    FILTER(
			        dEventos,
			        dEventos[time] = SELECTEDVALUE(dim_clubes[Clube_s_acentos]) &&
			        dEventos[Ano] = SELECTEDVALUE(dAno[Ano])
			    )
			)
			
			```
		lineageTag: eddf9a3a-ea19-40c0-a1d6-a2f47ca2a183

	measure label_evento = ```
			
			CALCULATE(
			    SELECTEDVALUE(dEventos[Evento]),
			    FILTER(
			        dEventos,
			        dEventos[time] = SELECTEDVALUE(dim_clubes[Clube_s_acentos]) &&
			        dEventos[Ano] = SELECTEDVALUE(dAno[Ano])
			    )
			)
			
			```
		lineageTag: 63954e73-3d31-45ce-8c94-d4fa3e01fa58

	measure label_evento_debug = ```
			
			"Evento: " & SELECTEDVALUE(dEventos[Evento]) & 
			" | Time evento: " & SELECTEDVALUE(dEventos[time]) & 
			" | Time contexto: " & SELECTEDVALUE(dim_clubes[Clube_s_acentos]) & 
			" | Ano evento: " & SELECTEDVALUE(dEventos[Ano]) & 
			" | Ano contexto: " & SELECTEDVALUE(dAno[Ano])
			
			```
		lineageTag: b679c44b-1e4b-4b6d-845e-15179ebd1917

	measure Radar_Mandande =
			CALCULATE(
			    MAX(dim_clubes[clube]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "S"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			        'full - unpivot'[id_time]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
		lineageTag: b6393cf0-fa2a-402b-b27e-b94921e350c8

	measure Radar_Visitante =
			CALCULATE(
			    MAX(dim_clubes[clube]),
			    FILTER(
			        'full - unpivot',
			        'full - unpivot'[mandante_flag] = "N"
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[id_time]),
			        'full - unpivot'[id_time]
			    ),
			    TREATAS(
			        VALUES('campeonato-brasileiro-estatisticas-full'[rodata]),
			        'full - unpivot'[rodata]
			    ),
			    USERELATIONSHIP('full - unpivot'[id_time], 'campeonato-brasileiro-estatisticas-full'[id_time])
			)
		lineageTag: f6d2f17f-70c0-4e3f-bb41-bf1f5687bb24

	measure 'Medida 9'
		lineageTag: 5fc2ec19-2c3a-48dc-a860-91b4e0087675

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure label_titulos_corinthians = ```
			
			CALCULATE(
			    CONCATENATEX(
			        VALUES(fct_classificacao[Ano]),
			        fct_classificacao[Ano],
			        ", "
			    ),
			    fct_classificacao[time] = "Corinthians",
			    fct_classificacao[StatusTime] = "Vencedor"
			)
			
			```
		lineageTag: 5070b0a5-3045-4ce0-8235-98cfca06e6de

	measure orderatletas = if(ISBLANK(SELECTEDVALUE(dAno[Ano])), SELECTEDVALUE(fct_gols_jogador[TotalGolsPorAtleta]), SELECTEDVALUE(fct_gols_jogador[TotalGolsPorAtletaAno]))
		lineageTag: 72003b65-f2c2-480f-b272-8de6e9a52c34

		formatStringDefinition = "0"

	measure 'Medida 10'
		lineageTag: af0c9e1a-670a-4f58-945c-6c5990028b6d

	measure _campeonatosatletas = DISTINCTCOUNT(TabelaAtletasPorAno[Ano])
		formatString: 0
		lineageTag: 9488c7d9-779f-4eb7-bd0e-e9329a8b442f

	measure _campeonatostimes = CALCULATE(DISTINCTCOUNT(fct_classificacao[Ano]), fct_classificacao[StatusTime] = "Vencedor")
		formatString: 0
		lineageTag: 0e19d22b-1f99-4099-9bd7-530c8f38aefd

	measure totalcartoesamarelos = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_amarelo]),0)
		formatString: #,0
		lineageTag: 1d1227e5-bbb6-4f00-a54f-811c017ebda2

	measure totalcartoevermelhos = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_vermelho]),0)
		formatString: 0
		lineageTag: 4a17eaf7-1e1c-4ed9-b497-c2df911c9c87

	measure totalfaltas = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[faltas]),0)
		formatString: #,0
		lineageTag: aa6396a8-4ece-4e2c-bf98-33c8c5eba259

	measure totalgols = COALESCE(SUM('full - unpivot'[gols_pro]),0)
		formatString: #,0
		lineageTag: 5f36a6f9-5bca-4bba-bf52-c749e96a1c16

	measure EstadioMaisPartidas = ```
			
			VAR TabelaResumo = 
			    ADDCOLUMNS(
			        SUMMARIZE('full - unpivot', 'full - unpivot'[arena], 'full - unpivot'[mandante_Estado]),
			        "TotalPartidas", CALCULATE(DISTINCTCOUNT('full - unpivot'[id]))
			    )
			VAR MaxPartidas = MAXX(TabelaResumo, [TotalPartidas])
			VAR EstadioUF = 
			    MAXX(
			        FILTER(TabelaResumo, [TotalPartidas] = MaxPartidas),
			        'full - unpivot'[arena] & " (" & 'full - unpivot'[mandante_Estado] & ")"
			    )
			RETURN
			    EstadioUF
			
			```
		lineageTag: 4f05ddb6-1183-4680-9a0d-de8d2ecde815

	measure 'Medida 11'
		lineageTag: 65d0674e-a7c7-4597-874d-f83cd400f569

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure 'Bot√£o Gols' = ```
			
			VAR _partida = "M√©dia por Partidas: " & FORMAT([M√©dia Gols por Partida], "0.00")
			VAR _temporada = "M√©dia por Temporadas: " & FORMAT([M√©dia Gols por Temporada], "0.00")
			VAR _times = "M√©dia por Times: " & FORMAT([M√©dia Gols por Time], "0.00")
			
			VAR espaco = UNICHAR(8202)
			VAR largura = 36
			
			VAR espaco_partida = largura - LEN(_partida)
			VAR espaco_temporada = largura - LEN(_temporada)
			VAR espaco_times = largura - LEN(_times)
			
			VAR texto = 
			    _partida & REPT(espaco, espaco_partida) & 
			    _temporada & REPT(espaco, espaco_temporada) & 
			    _times
			
			RETURN 
			texto
			
			```
		lineageTag: a31fc9a7-14c6-452b-b236-226a2a26836f

	measure 'M√©dia Gols por Partida' =
			
			COALESCE(
			    AVERAGE(
			        'full - unpivot'[gols_pro]
			    ),
			    0
			)
		formatString: 0.00
		lineageTag: 2abee985-8752-4b29-a0c6-f51e2f97a6fa

	measure 'M√©dia Gols por Temporada' = ```
			
			VAR TotalGols = COALESCE(SUM(fct_classificacao[GolsPro]), 0)
			VAR TotalTemporadas = CALCULATE(DISTINCTCOUNT(dCalendar[Ano-Campeonato]), dCalendar[Ano-Campeonato] >=14)
			RETURN
			DIVIDE(TotalGols, TotalTemporadas, 0)
			
			```
		lineageTag: c84baece-7511-4ceb-a43a-c2b9c110d1a0

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Gols por Time' = ```
			
			COALESCE(
			    AVERAGE(
			        fct_classificacao[GolsPro]
			    ),
			    0
			)
			
			```
		formatString: 0.00
		lineageTag: fbf0b116-08d7-4ca5-8efc-88dfb6fab398

	measure 'Bot√£o Cartoes Amarelos' = ```
			
			VAR _partida = "M√©dia por Partidas: " & FORMAT([M√©dia Cartoes Amarelos por Partida], "0.00")
			VAR _temporada = "M√©dia por Temporadas: " & FORMAT([M√©dia Cartoes Amarelos por Temporada], "0.00")
			VAR _times = "M√©dia por Times: " & FORMAT([M√©dia Cart√µes Amarelos por Time], "0.00")
			
			VAR espaco = UNICHAR(8202)
			VAR largura = 36
			
			VAR espaco_partida = largura - LEN(_partida)
			VAR espaco_temporada = largura - LEN(_temporada)
			VAR espaco_times = largura - LEN(_times)
			
			VAR texto = 
			    _partida & REPT(espaco, espaco_partida) & 
			    _temporada & REPT(espaco, espaco_temporada) & 
			    _times
			
			RETURN 
			texto
			
			```
		lineageTag: c062deba-7502-42f3-bec8-802a8b7cc8e9

	measure 'M√©dia Cartoes Amarelos por Partida' = ```
			
			COALESCE(
			    AVERAGE(
			        'campeonato-brasileiro-estatisticas-full'[cartao_amarelo]
			    ),
			    0
			)
			
			```
		lineageTag: f22479d4-13a0-4c36-a66d-1aae81e2082b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Cart√µes Amarelos por Time' =
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_amarelo]), 0)
			VAR TotalTimes = DISTINCTCOUNT('campeonato-brasileiro-estatisticas-full'[clube])
			RETURN
			DIVIDE(Total, TotalTimes, 0)
		lineageTag: d5b7a5e8-677b-462d-91a8-fe17552ddcdb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Cartoes Amarelos por Temporada' = ```
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_amarelo]), 0)
			VAR TotalTemporadas = CALCULATE(DISTINCTCOUNT(dCalendar[Ano-Campeonato]), dCalendar[Ano-Campeonato] >=14)
			RETURN
			DIVIDE(Total, TotalTemporadas, 0)
			
			```
		lineageTag: 66deec9f-41c8-4bcf-9076-c18fed4e2b4b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Cartoes Vermelhos por Temporada' = ```
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_vermelho]), 0)
			VAR TotalTemporadas = CALCULATE(DISTINCTCOUNT(dCalendar[Ano-Campeonato]), dCalendar[Ano-Campeonato] >=14)
			RETURN
			DIVIDE(Total, TotalTemporadas, 0)
			
			
			
			```
		lineageTag: 649d9d8c-804c-4252-93ad-bfb26e8f0e8e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Medida 12'
		lineageTag: 0013098e-e6b7-4804-904c-39ceee853c76

		annotation 43dbc3e8-3a1c-4b6f-9923-b49ff7d6691c = True

	measure 'M√©dia Cartoes Vermelhos por Partida' = ```
			
			COALESCE(
			    AVERAGE(
			        'campeonato-brasileiro-estatisticas-full'[cartao_vermelho]
			    ),
			    0
			)
			
			```
		lineageTag: d0134569-8ded-4085-8cd1-09558937f467

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Cart√µes Vermelhos por Time' =
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[cartao_vermelho]), 0)
			VAR TotalTimes = DISTINCTCOUNT('campeonato-brasileiro-estatisticas-full'[clube])
			RETURN
			DIVIDE(Total, TotalTimes, 0)
		lineageTag: 563497f8-a95b-452e-b656-336d250f8575

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Bot√£o Cartoes Vermelhos' = ```
			
			VAR _partida = "M√©dia por Partidas: " & FORMAT([M√©dia Cartoes Vermelhos por Partida], "0.00")
			VAR _temporada = "M√©dia por Temporadas: " & FORMAT([M√©dia Cartoes Vermelhos por Temporada], "0.00")
			VAR _times = "M√©dia por Times: " & FORMAT([M√©dia Cart√µes Vermelhos por Time], "0.00")
			
			VAR espaco = UNICHAR(8202)
			VAR largura = 36
			
			VAR espaco_partida = largura - LEN(_partida)
			VAR espaco_temporada = largura - LEN(_temporada)
			VAR espaco_times = largura - LEN(_times)
			
			VAR texto = 
			    _partida & REPT(espaco, espaco_partida) & 
			    _temporada & REPT(espaco, espaco_temporada) & 
			    _times
			
			RETURN 
			texto
			
			```
		lineageTag: 16a98236-c081-4b4b-9233-4de4241c9550

	measure 'M√©dia Faltas por Temporada' =
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[faltas]), 0)
			VAR TotalTemporadas = CALCULATE(DISTINCTCOUNT(dCalendar[Ano-Campeonato]), dCalendar[Ano-Campeonato] >=14)
			RETURN
			DIVIDE(Total, TotalTemporadas, 0)
		lineageTag: 12f51273-10f4-4a91-b534-ae873e46f54b

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Faltas por Partida' = ```
			
			COALESCE(
			    AVERAGE(
			        'campeonato-brasileiro-estatisticas-full'[faltas]
			    ),
			    0
			)
			
			```
		lineageTag: 4f2d9e9b-8fc5-4fcf-8ae8-8f97390e2d98

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'M√©dia Faltas por Time' =
			
			VAR Total = COALESCE(SUM('campeonato-brasileiro-estatisticas-full'[faltas]), 0)
			VAR TotalTimes = DISTINCTCOUNT('campeonato-brasileiro-estatisticas-full'[clube])
			RETURN
			DIVIDE(Total, TotalTimes, 0)
		lineageTag: 2a58b5bf-2749-467f-ab08-c7b61427355e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Bot√£o Faltas' = ```
			
			VAR _partida = "M√©dia por Partidas: " & FORMAT([M√©dia faltas por Partida], "0.00")
			VAR _temporada = "M√©dia por Temporadas: " & FORMAT([M√©dia faltas por Temporada], "0,00")
			VAR _times = "M√©dia por Times: " & FORMAT([M√©dia faltas por Time], "0,00")
			
			VAR espaco = UNICHAR(8202)
			VAR largura = 41.49
			
			VAR espaco_partida = largura - LEN(_partida)
			VAR espaco_temporada = largura - LEN(_temporada) -4
			
			VAR texto = 
			    _partida & REPT(espaco, espaco_partida) & 
			    _temporada & REPT(espaco, espaco_temporada) & 
			    _times
			
			RETURN 
			texto
			
			```
		lineageTag: ba4596ed-f662-4bb2-8d2a-8ed682ff310e

	measure 'Bot√£o Estadios' = ```
			
			VAR _primeiro = "Mineir√£o (MG): 918" 
			VAR _segundo = "Morumbi (SP): 826"
			VAR _terceiro = "Couto Moreira (PR): 590"
			
			VAR espaco = UNICHAR(8202)
			VAR largura = 44
			
			VAR espaco_primeiro = largura - LEN(_primeiro)
			VAR espaco_segundo = largura - LEN(_segundo) +8
			
			VAR texto = 
			    _primeiro & REPT(espaco, espaco_primeiro) & 
			    _segundo & REPT(espaco, espaco_segundo) & 
			    _terceiro
			
			RETURN 
			texto
			
			```
		lineageTag: 377d8a9e-42c3-4e63-83a2-87889e390246

	column Par√¢metro
		lineageTag: ae3ccc9d-1865-4171-bbfb-e1656d4b8ebf
		summarizeBy: none
		sourceColumn: [Value1]
		sortByColumn: 'Par√¢metro Pedido'

		relatedColumnDetails
			groupByColumn: 'Par√¢metro Campos'

		annotation SummarizationSetBy = Automatic

	column 'Par√¢metro Campos'
		isHidden
		lineageTag: 94ebfbb7-bf43-49e4-a0b5-0b7e0bd8168e
		summarizeBy: none
		sourceColumn: [Value2]
		sortByColumn: 'Par√¢metro Pedido'

		extendedProperty ParameterMetadata =
				{
				  "kind": 2,
				  "version": 3
				}

		annotation SummarizationSetBy = Automatic

	column 'Par√¢metro Pedido'
		isHidden
		formatString: 0
		lineageTag: b495d8c2-7952-48b4-9ee1-037e5006e2b6
		summarizeBy: sum
		sourceColumn: [Value3]

		annotation SummarizationSetBy = Automatic

	partition Param_Estatistica = calculated
		mode: import
		source =
				{
				    ("Pontua√ß√£o", NAMEOF([_pontosAno]), 0),
				    ("Classifica√ß√£o", NAMEOF([_PosicaoMaximaAno]), 1),
				    ("Gols Pro", NAMEOF([_golsProAno]), 2),
				    ("Gols Contra", NAMEOF([_golsContraAno]), 3),
				    ("Saldo de Gols", NAMEOF([_golsSGAno]), 4)
				}

	annotation PBI_Id = 3572fb447f164050a1dcf0822cc610d2

